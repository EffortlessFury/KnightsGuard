<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum TOWER_TYPE {
    theatre,
    cone,
    aoe
}

canShoot = true
rectangleOverlay = true
var fireSpeed;
var fireDamage;
var fireRange;

damageMultiplier = 1;
speedMultiplier = 1;
rangeMultiplier = 1;

towerLevel = 0;
towerUpgrade = 0
upgradeTower = false

// Randomize the tower's color a tiny bit upon creation.
//image_blend = make_color_hsv(random_range(0, 255), 145, 255)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>damageMultiplier = 1
rangeMultiplier = 1
speedMultiplier = 1
image_blend = c_white
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canShoot = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Order objects higher on the screen behind those lower on the screen.
depth = -y;

// Upgrade tower.
if (upgradeTower == true)
{
    upgradeTower = false
    if (towerUpgrade == 0)
    {
        if (towerLevel == 1) {o_control.money += 70}
        else if (towerLevel == 2) {o_control.money += 160}
        towerLevel = 0
    }
    else if (towerUpgrade == 1)
    {
        if (towerLevel == 0) {o_control.money -= 90}
        else if (towerLevel == 2) {o_control.money += 70}
        towerLevel = 1
    }
    else if (towerUpgrade == 2)
    {
        if (towerLevel == 0) {o_control.money -= 180}
        else if (towerLevel == 1) {o_control.money -= 90}
        towerLevel = 2
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if (rectangleOverlay)
{
    draw_set_color(c_black)
    draw_set_alpha(.6)
    draw_rectangle(x + 17, y - 96, x + 317, y, 0)
    draw_set_color(c_white)
    draw_set_alpha(1)
    draw_rectangle(x + 17, y - 96, x + 117, y, 1)
    draw_rectangle(x + 117, y - 96, x + 217, y, 1)
    draw_rectangle(x + 217, y - 96, x + 317, y, 1)
    draw_set_font(font1)
    if (towerLevel == 0)
    {
        draw_set_color(c_gray)
        draw_text(x + 22, y - 90, "Level 1#Current.")
        draw_set_color(c_white)
        draw_text(x + 122, y - 90, "Level 2#Cost: 90")
        draw_text(x + 222, y - 90, "Level 3#Cost: 180")
    }
    else if (towerLevel == 1)
    {
        draw_set_color(c_white)
        draw_text(x + 22, y - 90, "Level 1#Gain: 70")
        draw_set_color(c_gray)
        draw_text(x + 122, y - 90, "Level 2#Current.")
        draw_set_color(c_white)
        draw_text(x + 222, y - 90, "Level 3#Cost: 90")
    }
    else if (towerLevel == 2)
    {
        draw_set_color(c_white)
        draw_text(x + 22, y - 90, "Level 1#Gain: 160")
        draw_text(x + 122, y - 90, "Level 2#Gain: 70")
        draw_set_color(c_gray)
        draw_text(x + 222, y - 90, "Level 3#Current.")
        draw_set_color(c_white)
    }
    
    // Choose tower upgrade to build.
    if (mouse_check_button_pressed(mb_left))
    {
        if (mouse_x &gt; x + 17 &amp;&amp; mouse_x &lt; x + 117 &amp;&amp; mouse_y &gt; y - 96 &amp;&amp; mouse_y &lt; y)
        {
            towerUpgrade = 0
            upgradeTower = true
            rectangleOverlay = false
        }
        else if (mouse_x &gt; x + 117 &amp;&amp; mouse_x &lt; x + 217 &amp;&amp; mouse_y &gt; y - 96 &amp;&amp; mouse_y &lt; y)
        {
            towerUpgrade = 1
            upgradeTower = true
            rectangleOverlay = false
        }
        else if (mouse_x &gt; x + 217 &amp;&amp; mouse_x &lt; x + 317 &amp;&amp; mouse_y &gt; y - 96 &amp;&amp; mouse_y &lt; y)
        {
            towerUpgrade = 2
            upgradeTower = true
            rectangleOverlay = false
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
